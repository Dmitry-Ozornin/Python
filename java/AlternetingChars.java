// –î–∞–Ω–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ N (>0) –∏ —Å–∏–º–≤–æ–ª—ã c1 –∏ c2. üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω—ã N, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ c1 –∏ c2, –Ω–∞—á–∏–Ω–∞—è —Å c1.
public class AlternetingChars {
    public static void main(String[] args) {
        int n = 8;
        char c1 = 'A';
        char c2 = 'B';
        System.out.println(AlternetingCharsStr(n, c1, c2));
        System.out.println(AlternetingCharsSb(n, c1, c2));

        
    }
    
     public static String AlternetingCharsSb(int n, char c1, char c2) {
        // —Å—Ç—Ä–∏–Ω–≥–±–∏–ª–¥–µ—Ä, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏ –±–æ–ª—å—â–æ–º –æ–±—ä–µ–º–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        StringBuilder sb = new StringBuilder(n);
        for (int i = 0; i < n / 2; i++) {
            sb.append(c1).append(c2);
            
        }
        return sb.toString();
     }

     public static String AlternetingCharsStr(int n, char c1, char c2) {
        // —á–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫–∏, –º–µ–¥–ª–µ–Ω–Ω–æ –∏ —Ä–µ—Å—É—Ä—Å–æ–∑–∞—Ç—Ä–∞—Ç–Ω–æ
        String str = "";
        for (int i = 0; i < n / 2; i++) {
            str = str + c1 + c2;
            
        }
        return str;
        
     }
    
}
